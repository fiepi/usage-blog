<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://blog.fiepi.com/atom.xml" rel="self" type="application/atom+xml" /><link href="https://blog.fiepi.com/" rel="alternate" type="text/html" /><updated>2017-11-05T19:52:00+08:00</updated><id>https://blog.fiepi.com/</id><title type="html">玛修·基列莱特</title><subtitle>先輩最低です</subtitle><author><name>Mash Kyrielight</name><email>fiepi.dev@gamil.com</email></author><entry><title type="html">ss-redir+iptables+ipset+dnsmasq 配置记录</title><link href="https://blog.fiepi.com/archlinux/ss-redir_iptables_ipset_dnsmasq.html" rel="alternate" type="text/html" title="ss-redir+iptables+ipset+dnsmasq 配置记录" /><published>2017-11-05T00:00:00+08:00</published><updated>2017-11-05T00:00:00+08:00</updated><id>https://blog.fiepi.com/archlinux/ss-redir_iptables_ipset_dnsmasq</id><content type="html" xml:base="https://blog.fiepi.com/archlinux/ss-redir_iptables_ipset_dnsmasq.html">&lt;p&gt;记录 ss-redir 透明代理配置过程。
&lt;!-- more --&gt;&lt;/p&gt;

&lt;h2 id=&quot;相关软件包&quot;&gt;相关软件包&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dnsmasq ipset shadowsocks-libev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ss-redir-配置&quot;&gt;ss-redir 配置&lt;/h2&gt;

&lt;p&gt;创建配置文件&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/shadowsocks/ss-redir.json
{
	&quot;server&quot;: &quot;[server_ip]&quot;,
	&quot;server_port&quot;: [server_port],
	&quot;local_port&quot;: 10800,
	&quot;local_address&quot;: &quot;127.0.0.1&quot;,
	&quot;password&quot;: &quot;password&quot;,
	&quot;timeout&quot;: 300,
	&quot;method&quot;: &quot;aes-256-gcm&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;systemd 守护进程&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/systemd/system/ss-redir.service

[Unit]
Description=Shadowsocks-Libev Client Service Redir Mode
After=network.target

[Service]
Type=simple
User=nobody
CapabilityBoundingSet=CAP_NET_ADMIN CAP_NET_BIND_SERVICE
ExecStart=/usr/bin/ss-redir -c /etc/shadowsocks/ss-redir.json -u

[Install]
WantedBy=multi-user.target

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;保持自启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start ss-redir.service
sudo systemctl enable ss-redir.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;iptables--ipset-实现-chnroute-分流&quot;&gt;iptables + ipset 实现 chnroute 分流&lt;/h2&gt;

&lt;p&gt;获取中国 IP&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# wget -O- 'http://ftp.apnic.net/apnic/stats/apnic/delegated-apnic-latest' | awk -F\| '/CN\|ipv4/ { printf(&quot;%s/%d\n&quot;, $4, 32-log($5)/log(2)) }' &amp;gt; /etc/chnroute.txt

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;停用默认防火墙自启动服务&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl disable iptables.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;新建启动脚本&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/iptables/ss-up.sh

#!/bin/bash

ipset -N chnroute hash:net maxelem 65536

for ip in $(cat '/etc/chnroute.txt'); do
  ipset add chnroute $ip
done

iptables -t nat -N SHADOWSOCKS

# 直连服务器 IP
iptables -t nat -A SHADOWSOCKS -d [server_ip]/24 -j RETURN

# 允许连接保留地址
iptables -t nat -A SHADOWSOCKS -d 0.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 10.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 127.0.0.0/8 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 169.254.0.0/16 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 172.16.0.0/12 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 192.168.0.0/16 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 224.0.0.0/4 -j RETURN
iptables -t nat -A SHADOWSOCKS -d 240.0.0.0/4 -j RETURN

# 直连中国 IP
iptables -t nat -A SHADOWSOCKS -p tcp -m set --match-set chnroute dst -j RETURN
iptables -t nat -A SHADOWSOCKS -p icmp -m set --match-set chnroute dst -j RETURN

# 重定向到 ss-redir 端口
iptables -t nat -A SHADOWSOCKS -p tcp -j REDIRECT --to-port 10800
iptables -t nat -A SHADOWSOCKS -p udp -j REDIRECT --to-port 10800
iptables -t nat -A OUTPUT -p tcp -j SHADOWSOCKS
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;测试执行情况&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chmod +x /etc/iptables/ss-up.sh
sudo sh /etc/iptables/ss-up.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;停止脚本&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/iptables/ss-down.sh
sudo chmod +x /etc/iptables/ss-down.sh

#!/bin/bash
iptables -t nat -D OUTPUT -p icmp -j SHADOWSOCKS
iptables -t nat -D OUTPUT -p tcp -j SHADOWSOCKS
iptables -t nat -F SHADOWSOCKS
iptables -t nat -X SHADOWSOCKS
ipset destroy chnroute
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;添加自启动
复制修改原 iptables 的 systemd 配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo cp /usr/lib/systemd/system/iptables.service /etc/systemd/system/iptables-proxy.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;根据情况修改，参考如下&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/systemd/system/iptables-proxy.service

[Unit]
Description=Packet Filtering Framework and Shadowsocks-chnroute
Before=network-pre.target
Wants=network-pre.target

[Service]
Type=oneshot
ExecStart=/etc/iptables/ss-up.sh
ExecStop=/etc/iptables/ss-down.sh
RemainAfterExit=yes

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;检查并添加自启动&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl daemon-reload
sudo systemctl start iptables-proxy.service
sudo systemctl status iptables-proxy.service
sudo systemctl enable iptables-proxy.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dnsmasq-的配置&quot;&gt;dnsmasq 的配置&lt;/h2&gt;
&lt;p&gt;Dnsmasq 提供 DNS 缓存和 DHCP 服务功能，通过缓存 DNS 请求来提高对访问过的网址的连接速度。&lt;/p&gt;

&lt;p&gt;去掉 这几行的配置&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/dnsmasq.conf

resolv-file=/etc/resolv.dnsmasq.conf
listen-address=127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改 Dnsmasq DNS&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/resolv.dnsmasq.conf 

nameserver 8.8.8.8
nameserver 8.8.4.4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;修改系统 DNS&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo vim /etc/resolv.conf
nameserver 127.0.0.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;防止被修改&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chattr +i /etc/resolv.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;更多细节请浏览 &lt;a href=&quot;https://wiki.archlinux.org/index.php/dnsmasq&quot;&gt; Dnsmasq - Arch Wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;启动 Dnsmasq&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl start dnsmasq.service
sudo systemctl status dnsmasq.service
sudo systemctl enable dnsmasq.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>fiepi</name></author><category term="archlinux" /><category term="ss-redir" /><category term="iptables" /><category term="archlinux" /><category term="ipset" /><category term="dnsmasq" /><summary type="html">记录 ss-redir 透明代理配置过程。</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://unsplash.com/photos/-MnS_JCZl-U/download?force=true" /></entry><entry><title type="html">记录 archlinux 下 aria2+https 的配置过程</title><link href="https://blog.fiepi.com/archlinux/aria2_config.html" rel="alternate" type="text/html" title="记录 archlinux 下 aria2+https 的配置过程" /><published>2017-11-04T00:00:00+08:00</published><updated>2017-11-04T00:00:00+08:00</updated><id>https://blog.fiepi.com/archlinux/aria2_config</id><content type="html" xml:base="https://blog.fiepi.com/archlinux/aria2_config.html">&lt;p&gt;Aria2 是一个轻量的多协议、多线程下载器。这里记录一下安装配置过程。&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h1 id=&quot;1-安装&quot;&gt;1. 安装&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo pacman -S aria2 certbot nginx&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;2-配置&quot;&gt;2. 配置&lt;/h1&gt;

&lt;p&gt;假设下载服务器域名为：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aria2.fiepi.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;1-配置临时-web-服务器获取免费-lets-encrypt-证书&quot;&gt;（1） 配置临时 web 服务器获取免费 Let’s Encrypt 证书&lt;/h2&gt;

&lt;p&gt;添加&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;include vhost/*.conf;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;到&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/etc/nginx/nginx.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;创建 nginx 配置文件&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo mkdir /etc/nginx/vhost&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo vim /etc/nginx/vhost/aria2.fiepi.com.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;server {
    listen 80;
    server_name aria2.fiepi.com;
    index index.html index.htm;
    root /home/fiepi/web/root;
    autoindex on;
    autoindex_exact_size off;
    autoindex_localtime on;
    location / {
    }
    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|ico)$ {
        expires 30d;
        access_log off;
    }
    location ~ .*\.(js|css)?$ {
        expires 7d;
        access_log off;
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;测试配置无误后重启 nginx 并生成证书&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nginx -t

sudo systemctl restart nginx.service

sudo certbot certonly --webroot -w /home/fiepi/web/root -d aria2.fiepi.com

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;证书路径：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;/etc/letsencrypt/archive/aria2.fiepi.com/&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;修改权限让 aria2 能够读取&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo chown -R fiepi:users /etc/letsencrypt/archive&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;移除临时 web 配置&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo mv /etc/nginx/vhost/aria2.fiepi.com.conf /etc/nginx/vhost/aria2.fiepi.com.conf.bak&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo systemctl restart nginx.service&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;2创建-aria2-配置&quot;&gt;（2）创建 aria2 配置&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;mkdir -p ~/.config/aria2&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;vim ~/.config/aria2/aria2.conf&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;随机生成身份认证的 Token：&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;openssl rand -hex 15&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;## 下载路径
dir=~/Downloads/aria2
## 生成随机 Token: openssl rand -hex 15
rpc-secret=xxxxxx
rpc-secure=true
## 证书
rpc-certificate=/etc/letsencrypt/archive/aria2.fiepi.com/fullchain1.pem
rpc-private-key=/etc/letsencrypt/archive/aria2.fiepi.com/privkey1.pem
## http代理
# http-proxy=http://127.0.0.1:8118
## 上传速度限制 0 为不限制
max-overall-upload-limit=10K
max-upload-limit=2K
## 是否预先分配磁盘空间
file-allocation=prealloc
## 是否继续下载未完成的文件
continue=true
## 日志级别，可以为debug, info, notice, warn 或 error
log-level=info
## 每下载任务最大连接数
max-connection-per-server=10
## 下载进度输出的间隔时间
#summary-interval=120
## 是否以进程的方式启动
daemon=true
## 是否启用rpc
enable-rpc=true
## rpc监听端口
rpc-listen-port=6800
## 是否在所有网卡上启用监听
rpc-listen-all=true
## 最大同时下载任务数，根据实际情况修改
#max-concurrent-downloads=3
## 会话保存文件，进程退出时保存未下载完成的会话
save-session=/home/fiepi/.config/aria2/session.lock
## 启动输入文件，进程启动时读取上次未下载完成的会话
input-file=/home/fiepi/.config/aria2/session.lock
## 日志文件，根据实际情况修改
#log=~/.config/aria2/aria.log
## 是否关闭ipv6
disable-ipv6=true
## 磁盘缓存
disk-cache=0
## 超时时间
#timeout=600
## 重试等待时间
#retry-wait=30
## 最大重试次数，0代表可以无限次重试
#max-tries=0
## user agent，此处所填值用于伪装成百度云网盘客户端
user-agent=netdisk;4.4.0.6;PC;PC-Windows;6.2.9200 WindowsBaiduYunGuanJia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;3创建-systemd-守护进程&quot;&gt;（3）创建 systemd 守护进程&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo vim /etc/systemd/user/aria2.service&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[Unit]
Description=Aria2 Service
After=network.target

[Service]
Type=forking
WorkingDirectory=%h
ExecStart=/usr/bin/aria2c --daemon --enable-rpc --rpc-listen-all --rpc-allow-origin-all -c -D  --conf-path=%h/.config/aria2/aria2.conf

[Install]
WantedBy=default.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;启动&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl --user start aria2.service

systemctl --user enable aria2.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;过去用户进程在用户登出时会被杀死，现在 Arch 已经修改了默认编译参数，所以不需要额外的设置。详见  &lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User&quot;&gt;Arch Wiki Systemd/User&lt;/a&gt; 的 &lt;a href=&quot;https://wiki.archlinux.org/index.php/Systemd/User#Kill_user_processes_on_logout&quot;&gt;Kill user processes on logout&lt;/a&gt; 部分。&lt;/p&gt;

&lt;h2 id=&quot;4防火墙配置&quot;&gt;（4）防火墙配置&lt;/h2&gt;

&lt;p&gt;打开 6800 端口&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo vim /etc/iptables/iptables.rules&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;添加&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-A INPUT -p tcp -m tcp --dport 6800 -j ACCEPT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使之生效&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;sudo iptables-restore &amp;lt; /etc/iptables/iptables.rules&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;最后打开 Yaaw（&lt;a href=&quot;https://yaaw.fiepi.com&quot;&gt;yaaw.fiepi.com&lt;/a&gt;） 前端，填入配置：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;https://token:xxxxxx@aria2.fiepi.com:6800/jsonrpc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>fiepi</name></author><category term="archlinux" /><category term="archlinux" /><category term="aria2" /><category term="https" /><category term="letsencrypt" /><summary type="html">Aria2 是一个轻量的多协议、多线程下载器。这里记录一下安装配置过程。</summary></entry></feed>